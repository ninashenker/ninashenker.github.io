{"version":3,"sources":["webpack:///./src/components/Question.js","webpack:///./src/components/postCard.js","webpack:///./src/pages/quiz_old.js"],"names":["Question","props","className","content","QuizPage","location","siteTitle","data","site","siteMetadata","title","keywords","id","query","render"],"mappings":"8FAAA,yBAaeA,IAVf,SAAkBC,GAChB,OACE,wBAAIC,UAAU,YAAYD,EAAME,W,yDCLpC,qB,yDCAA,oEAoDMC,GApDN,wCAoDiB,SAAC,EAAUC,GAAc,IAClCC,EADiC,EAArBC,KACKC,KAAKC,aAAaC,MACzC,OACE,kBAAC,IAAD,CAAQA,MAAOJ,GACf,kBAAC,IAAD,CACAI,MAAM,YACNC,SAAU,CAAC,OAAD,0DAEV,6BAAST,UAAU,uCACnB,yBAAKA,UAAU,qBACf,wBAAIU,GAAG,wGAAP,oCA4BW,mBAAAX,GAAK,OAClB,kBAAC,cAAD,CACAY,MArBc,aAsBdC,OAAQ,SAAAP,GAAI,OACV,kBAACH,EAAD,eAAUC,SAAUJ,EAAMI,SAAUJ,OAAK,EAACM,KAAMA,GAAUN","file":"component---src-pages-quiz-old-js-912fda4da59f89d11bd9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return (\n    <h2 className=\"question\">{props.content}</h2>\n  );\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nimport Question from '../components/Question';\nconst quizQuestions = [\n    {\n        question: 'Question 1?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 2?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 3?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 4?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 5?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 6?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 7?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 8?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 9?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n    {\n        question: 'Question 10?',\n        options: ['option 1', 'option 2', 'option 3','option 4'],\n    },\n]\n\nconst QuizPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout title={siteTitle}>\n    <SEO\n    title=\"All posts\"\n    keywords={[`blog`, `gatsby`, `javascript`, `react`, `skincare`, `quiz`, `skin`]}\n    />\n    <article className=\"post-content page-template no-image\">\n    <div className=\"post-content-body\">\n    <h2 id=\"clean-minimal-and-deeply-customisable-london-is-a-theme-made-for-people-who-appreciate-simple-lines-\">\n   Question content = Question\n    </h2>\n    </div>\n    </article>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    benchAccounting: file(\n      relativePath: { eq: \"bench-accounting-49909-unsplash.jpg\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n  query={indexQuery}\n  render={data => (\n    <QuizPage location={props.location} props data={data} {...props} />\n  )}\n  />\n)\n"],"sourceRoot":""}