{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/blog.js"],"names":["BlogPage","location","siteTitle","data","site","siteMetadata","title","keywords","props","query","render"],"mappings":"kHAAA,qB,yDCAA,oEAUMA,GAVN,8BAUiB,SAAC,EAAUC,GAAc,IAClCC,EADiC,EAArBC,KACKC,KAAKC,aAAaC,MACzC,OACE,kBAAC,IAAD,CAAQA,MAAOJ,GACf,kBAAC,IAAD,CACAI,MAAM,YACNC,SAAU,CAAC,OAAD,0DAEV,uCA0BW,mBAAAC,GAAK,OAClB,kBAAC,cAAD,CACAC,MArBc,aAsBdC,OAAQ,SAAAP,GAAI,OACV,kBAACH,EAAD,eAAUC,SAAUO,EAAMP,SAAUO,OAAK,EAACL,KAAMA,GAAUK","file":"component---src-pages-blog-js-fa05e297ff693fcaa917.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst BlogPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  return (\n    <Layout title={siteTitle}>\n    <SEO\n    title=\"All posts\"\n    keywords={[`blog`, `gatsby`, `javascript`, `react`, `skincare`, `quiz`, `skin`]}\n    />\n    <h2>\n    Blog\n    </h2>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    benchAccounting: file(\n      relativePath: { eq: \"bench-accounting-49909-unsplash.jpg\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n  query={indexQuery}\n  render={data => (\n    <BlogPage location={props.location} props data={data} {...props} />\n  )}\n  />\n)\n"],"sourceRoot":""}